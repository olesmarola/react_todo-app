{"version":3,"sources":["Todo.js","TodoList.js","TodoHeader.js","TodoFilter.js","TodoFooter.js","App.js","index.js"],"names":["Todo","state","editValue","_this","props","todo","title","handleInputChange","e","setState","target","value","handleKeyPress","_this$props","deleteTodo","editTodoTitle","selectToEdit","key","trim","length","id","editTodo","_this$props2","this","checkTodo","canEdit","react_default","a","createElement","className","cn","completed","editing","checked","onChange","type","htmlFor","onDoubleClick","onClick","onKeyUp","React","Component","TodoList","selectToEditId","_this2","todos","map","src_Todo","TodoHeader","inputValue","validateInput","preventDefault","Date","addTodo","todosLength","isAllChecked","toggleAllTodos","onSubmit","placeholder","Fragment","TodoFilter","_ref","filter","setFilter","isFilterSelect","href","selected","TodoFooter","todosLeft","clearCompletedTodos","currentFilter","style","display","Object","values","FILTERS_TYPES","src_TodoFilter","some","all","active","App","_React$Component","_getPrototypeOf2","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","prevState","toConsumableArray","todoId","objectSpread2","newTitle","every","filterValue","filterArray","inherits","createClass","_this$state","visibleTodos","src_TodoHeader","src_TodoList","src_TodoFooter","ReactDOM","render","App_App","document","getElementById"],"mappings":"kSAwFeA,6MAnFbC,MAAQ,CACNC,UAAWC,EAAKC,MAAMC,KAAKC,SAG7BC,kBAAoB,SAACC,GACnBL,EAAKM,SAAS,CACZP,UAAWM,EAAEE,OAAOC,WAIxBC,eAAiB,SAACJ,GAAM,IAAAK,EACoCV,EAAKC,MAAvDC,EADcQ,EACdR,KAAMS,EADQD,EACRC,WAAYC,EADJF,EACIE,cAAeC,EADnBH,EACmBG,aAE3B,UAAVR,EAAES,MACuC,IAAvCd,EAAKF,MAAMC,UAAUgB,OAAOC,QAC9BL,EAAWT,EAAKe,IAGlBL,EAAcV,EAAKe,GAAIjB,EAAKF,MAAMC,WAClCc,EAAa,OAGD,WAAVR,EAAES,KACJD,EAAa,SAIjBK,SAAW,kBAAMlB,EAAKC,MAAMY,aAAab,EAAKC,MAAMC,KAAKe,6EAEhD,IAAAE,EAC0CC,KAAKnB,MAA9CC,EADDiB,EACCjB,KAAMS,EADPQ,EACOR,WAAYU,EADnBF,EACmBE,UAAWC,EAD9BH,EAC8BG,QAErC,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IACb,CAAEC,UAAW1B,EAAK0B,WAClB,CAAEC,QAASP,KAGXC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAG,SACjBJ,EAAAC,EAAAC,cAAA,SACEK,QAAS5B,EAAK0B,UACdG,SAAU,kBAAMV,EAAUnB,EAAKe,KAC/Be,KAAK,WACLN,UAAWC,IAAG,UACdV,GAAIf,EAAKe,KAEXM,EAAAC,EAAAC,cAAA,SACEQ,QAAQ,SACRC,cAAed,KAAKF,UAEnBhB,EAAKC,OAERoB,EAAAC,EAAAC,cAAA,UACEU,QAAS,kBAAMxB,EAAWT,EAAKe,KAC/Be,KAAK,SACLN,UAAWC,IAAG,cAGlBJ,EAAAC,EAAAC,cAAA,SACEM,SAAUX,KAAKhB,kBACfgC,QAAShB,KAAKX,eACdD,MAAOY,KAAKtB,MAAMC,UAClBiC,KAAK,OACLN,UAAU,iBAhEDW,IAAMC,WCwCVC,6MAtCbzC,MAAQ,CACN0C,eAAgB,QAGlB3B,aAAe,SAACI,GACdjB,EAAKM,SAAS,CACZkC,eAAgBvB,6EAIX,IAAAwB,EAAArB,KAAAV,EACiDU,KAAKnB,MAArDyC,EADDhC,EACCgC,MAAO/B,EADRD,EACQC,WAAYU,EADpBX,EACoBW,UAAWT,EAD/BF,EAC+BE,cAEtC,OACEW,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAG,cACfe,EAAMC,IAAI,SAAAzC,GAAI,OACbqB,EAAAC,EAAAC,cAACmB,EAAD,CACE9B,IAAKZ,EAAKe,GACVf,KAAMA,EACNS,WAAYA,EACZU,UAAWA,EACXT,cAAeA,EACfC,aAAc4B,EAAK5B,aACnBS,QAASmB,EAAK3C,MAAM0C,iBAAmBtC,EAAKe,eAxBjCoB,IAAMC,WCoEdO,6MApEb/C,MAAQ,CACNgD,WAAY,MAGd1C,kBAAoB,SAACC,GACnBL,EAAKM,SAAS,CACZwC,WAAYzC,EAAEE,OAAOC,WAIzBuC,cAAgB,SAAC1C,GAGf,GAFAA,EAAE2C,iBAEEhD,EAAKF,MAAMgD,WAAW/B,OAAOC,OAAS,EAAG,CAC3C,IAAMd,EAAO,CACXe,IAAK,IAAIgC,KACT9C,MAAOH,EAAKF,MAAMgD,WAClBlB,WAAW,GAGb5B,EAAKC,MAAMiD,QAAQhD,GAEnBF,EAAKM,SAAS,CACZwC,WAAY,+EAKT,IAAApC,EAC+CU,KAAKnB,MAAnDkD,EADDzC,EACCyC,YAAaC,EADd1C,EACc0C,aAAcC,EAD5B3C,EAC4B2C,eAEnC,OACE9B,EAAAC,EAAAC,cAAA,QACE6B,SAAUlC,KAAK2B,cACfrB,UAAWC,IAAG,WAEdJ,EAAAC,EAAAC,cAAA,SACEM,SAAUX,KAAKhB,kBACfI,MAAOY,KAAKtB,MAAMgD,WAClBd,KAAK,OACLN,UAAU,WACV6B,YAAY,2BAGbJ,EAAc,GACb5B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,KACEjC,EAAAC,EAAAC,cAAA,SACEK,QAASsB,EACTrB,SAAUsB,EACVrB,KAAK,WACLf,GAAG,aACHS,UAAWC,IAAG,gBAEhBJ,EAAAC,EAAAC,cAAA,SAAOQ,QAAQ,cAAf,iCAtDaI,IAAMC,WCkBhBmB,EAlBI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,OAAQC,EAAXF,EAAWE,UAAWC,EAAtBH,EAAsBG,eAAtB,OACjBtC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEU,QAAS,kBAAMyB,EAAUD,IACzBG,KAAK,KACLpC,UAAWC,IAAG,CAAEoC,SAAUF,KAEzBF,KC0CQK,EA/CI,SAAAN,GAAA,IACjBO,EADiBP,EACjBO,UACAvB,EAFiBgB,EAEjBhB,MACAwB,EAHiBR,EAGjBQ,oBACAN,EAJiBF,EAIjBE,UACAO,EALiBT,EAKjBS,cALiB,OAOjB5C,EAAAC,EAAAC,cAAA,UACEC,UAAWC,IAAG,UACdyC,MAAO,CAAEC,QAAS,UAElB9C,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAG,eACjBsC,EACA,IAFH,cAMA1C,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAG,YACf2C,OAAOC,OAAOC,GAAe7B,IAAI,SAAAnC,GAAK,OACrCe,EAAAC,EAAAC,cAACgD,EAAD,CACE3D,IAAKN,EACLmD,OAAQnD,EACRoD,UAAWA,EACXC,eAAgBrD,IAAU2D,OAKhC5C,EAAAC,EAAAC,cAAA,UACEU,QAAS+B,EACTlC,KAAK,SACLN,UAAWC,IAAG,mBACdyC,MAAO,CAAEC,QAAS,UAEjB3B,EAAMgC,KAAK,SAAAxE,GAAI,OAAIA,EAAK0B,aAAc,qBClChC4C,EAAgB,CAC3BG,IAAK,MACL/C,UAAW,YACXgD,OAAQ,UAGGC,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA/E,EAAAsE,OAAAU,EAAA,EAAAV,CAAAlD,KAAAyD,GAAA,QAAAI,EAAAC,UAAAlE,OAAAmE,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAArF,EAAAsE,OAAAgB,EAAA,EAAAhB,CAAAlD,MAAA2D,EAAAT,OAAAiB,EAAA,EAAAjB,CAAAO,IAAAW,KAAAC,MAAAV,EAAA,CAAA3D,MAAAsE,OAAAP,MACErF,MAAQ,CACNqE,cAAeK,EAAcG,IAC7BjC,MAAO,IAHX1C,EAMEkD,QAAU,SAAChD,GACTF,EAAKM,SAAS,SAAAqF,GAAS,MAAK,CAC1BjD,MAAK,GAAAgD,OAAApB,OAAAsB,EAAA,EAAAtB,CACAqB,EAAUjD,OADV,CAEHxC,IAEFiE,cAAeK,EAAcG,QAZnC3E,EAgBEqB,UAAY,SAACwE,GACX7F,EAAKM,SAAS,SAAAqF,GAAS,MAAK,CAC1BjD,MAAOiD,EAAUjD,MAAMC,IAAI,SAACzC,GAC1B,OAAIA,EAAKe,KAAO4E,EACP3F,EAGFoE,OAAAwB,EAAA,EAAAxB,CAAA,GACFpE,EADL,CAEE0B,WAAY1B,EAAK0B,kBAzB3B5B,EA+BEY,cAAgB,SAACiF,EAAQE,GACvB/F,EAAKM,SAAS,SAAAqF,GAAS,MAAK,CAC1BjD,MAAOiD,EAAUjD,MAAMC,IAAI,SAACzC,GAC1B,OAAI2F,IAAW3F,EAAKe,IAAMf,EAAKC,QAAU4F,EAChC7F,EAGFoE,OAAAwB,EAAA,EAAAxB,CAAA,GACFpE,EADL,CAEEC,MAAO4F,UAxCjB/F,EA8CEW,WAAa,SAACkF,GACZ7F,EAAKM,SAAS,SAAAqF,GAAS,MAAK,CAC1BjD,MAAOiD,EAAUjD,MAAMiB,OAAO,SAAAzD,GAAI,OAAIA,EAAKe,KAAO4E,QAhDxD7F,EAoDEkE,oBAAsB,WACpBlE,EAAKM,SAAS,SAAAqF,GAAS,MAAK,CAC1BjD,MAAOiD,EAAUjD,MAAMiB,OAAO,SAAAzD,GAAI,OAAKA,EAAK0B,gBAtDlD5B,EA0DEqD,eAAiB,WACfrD,EAAKM,SAAS,SAAAqF,GAAS,MAAK,CAC1BjD,MAAOiD,EAAUjD,MAAMC,IAAI,SAAAzC,GAAI,OAAAoE,OAAAwB,EAAA,EAAAxB,CAAA,GAC1BpE,EAD0B,CAE7B0B,WAAY5B,EAAKoD,uBA9DzBpD,EAmEEoD,aAAe,kBAAMpD,EAAKF,MAAM4C,MAAMsD,MAAM,SAAA9F,GAAI,OAAIA,EAAK0B,aAnE3D5B,EAqEE4D,UAAY,SAACqC,GACXjG,EAAKM,SAAS,CACZ6D,cAAe8B,KAvErBjG,EA2EEkG,YAAc,WACZ,OAAQlG,EAAKF,MAAMqE,eACjB,KAAKK,EAAc5C,UACjB,OAAO5B,EAAKF,MAAM4C,MAAMiB,OAAO,SAAAzD,GAAI,OAAIA,EAAK0B,YAC9C,KAAK4C,EAAcI,OACjB,OAAO5E,EAAKF,MAAM4C,MAAMiB,OAAO,SAAAzD,GAAI,OAAKA,EAAK0B,YAC/C,KAAK4C,EAAcG,IACnB,QAAS,OAAO3E,EAAKF,MAAM4C,MAAMiB,OAAO,SAAAzD,GAAI,OAAIA,MAlFtDF,EAAA,OAAAsE,OAAA6B,EAAA,EAAA7B,CAAAO,EAAAC,GAAAR,OAAA8B,EAAA,EAAA9B,CAAAO,EAAA,EAAA/D,IAAA,SAAAN,MAAA,WAsFW,IAAA6F,EAC0BjF,KAAKtB,MAA9B4C,EADD2D,EACC3D,MAAOyB,EADRkC,EACQlC,cACTmC,EAAelF,KAAK8E,cACpB9C,EAAehC,KAAKgC,eACpBD,EAAcT,EAAM1B,OAE1B,OACEO,EAAAC,EAAAC,cAAA,WAASC,UAAWC,IAAG,YACrBJ,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAC8E,EAAD,CACErD,QAAS9B,KAAK8B,QACdG,eAAgBjC,KAAKiC,eACrBD,aAAcA,EACdD,YAAaA,IAEf5B,EAAAC,EAAAC,cAAA,WACEC,UAAWC,IAAG,QACdyC,MAAO,CAAEC,QAAS,UAElB9C,EAAAC,EAAAC,cAAC+E,EAAD,CACE9D,MAAO4D,EACP3F,WAAYS,KAAKT,WACjBU,UAAWD,KAAKC,UAChBT,cAAeQ,KAAKR,iBAIvBQ,KAAKtB,MAAM4C,MAAM1B,OAAS,GACzBO,EAAAC,EAAAC,cAACgF,EAAD,CACEtC,cAAeA,EACfP,UAAWxC,KAAKwC,UAChBK,UAAWvB,EAAMiB,OAAO,SAAAzD,GAAI,OAAKA,EAAK0B,YAAWZ,OACjDkD,oBAAqB9C,KAAK8C,oBAC1BxB,MAAO4D,SAvHnBzB,EAAA,CAAyBxC,IAAMC,WCN/BoE,IAASC,OACPpF,EAAAC,EAAAC,cAACmF,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.887b524c.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\n\nclass Todo extends React.Component {\n  state = {\n    editValue: this.props.todo.title,\n  };\n\n  handleInputChange = (e) => {\n    this.setState({\n      editValue: e.target.value,\n    });\n  };\n\n  handleKeyPress = (e) => {\n    const { todo, deleteTodo, editTodoTitle, selectToEdit } = this.props;\n\n    if (e.key === 'Enter') {\n      if (this.state.editValue.trim().length === 0) {\n        deleteTodo(todo.id);\n      }\n\n      editTodoTitle(todo.id, this.state.editValue);\n      selectToEdit(null);\n    }\n\n    if (e.key === 'Escape') {\n      selectToEdit(null);\n    }\n  };\n\n  editTodo = () => this.props.selectToEdit(this.props.todo.id);\n\n  render() {\n    const { todo, deleteTodo, checkTodo, canEdit } = this.props;\n\n    return (\n      <li className={cn(\n        { completed: todo.completed },\n        { editing: canEdit }\n      )}\n      >\n        <div className={cn('view')}>\n          <input\n            checked={todo.completed}\n            onChange={() => checkTodo(todo.id)}\n            type=\"checkbox\"\n            className={cn('toggle')}\n            id={todo.id}\n          />\n          <label\n            htmlFor=\"todo-1\"\n            onDoubleClick={this.editTodo}\n          >\n            {todo.title}\n          </label>\n          <button\n            onClick={() => deleteTodo(todo.id)}\n            type=\"button\"\n            className={cn('destroy')}\n          />\n        </div>\n        <input\n          onChange={this.handleInputChange}\n          onKeyUp={this.handleKeyPress}\n          value={this.state.editValue}\n          type=\"text\"\n          className=\"edit\"\n        />\n      </li>\n    );\n  }\n}\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  }).isRequired,\n  canEdit: PropTypes.bool.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  checkTodo: PropTypes.func.isRequired,\n  editTodoTitle: PropTypes.func.isRequired,\n  selectToEdit: PropTypes.func.isRequired,\n};\n\nexport default Todo;\n","import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\n\nclass TodoList extends React.Component {\n  state = {\n    selectToEditId: null,\n  };\n\n  selectToEdit = (id) => {\n    this.setState({\n      selectToEditId: id,\n    });\n  };\n\n  render() {\n    const { todos, deleteTodo, checkTodo, editTodoTitle } = this.props;\n\n    return (\n      <ul className={cn('todo-list')}>\n        {todos.map(todo => (\n          <Todo\n            key={todo.id}\n            todo={todo}\n            deleteTodo={deleteTodo}\n            checkTodo={checkTodo}\n            editTodoTitle={editTodoTitle}\n            selectToEdit={this.selectToEdit}\n            canEdit={this.state.selectToEditId === todo.id}\n          />\n        ))}\n      </ul>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  checkTodo: PropTypes.func.isRequired,\n  editTodoTitle: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\n\nclass TodoHeader extends React.Component {\n  state = {\n    inputValue: '',\n  };\n\n  handleInputChange = (e) => {\n    this.setState({\n      inputValue: e.target.value,\n    });\n  };\n\n  validateInput = (e) => {\n    e.preventDefault();\n\n    if (this.state.inputValue.trim().length > 0) {\n      const todo = {\n        id: +new Date(),\n        title: this.state.inputValue,\n        completed: false,\n      };\n\n      this.props.addTodo(todo);\n\n      this.setState({\n        inputValue: '',\n      });\n    }\n  };\n\n  render() {\n    const { todosLength, isAllChecked, toggleAllTodos } = this.props;\n\n    return (\n      <form\n        onSubmit={this.validateInput}\n        className={cn('header')}\n      >\n        <input\n          onChange={this.handleInputChange}\n          value={this.state.inputValue}\n          type=\"text\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n        />\n\n        {todosLength > 0 && (\n          <>\n            <input\n              checked={isAllChecked}\n              onChange={toggleAllTodos}\n              type=\"checkbox\"\n              id=\"toggle-all\"\n              className={cn('toggle-all')}\n            />\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          </>\n        )}\n      </form>\n    );\n  }\n}\n\nTodoHeader.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n  isAllChecked: PropTypes.bool.isRequired,\n  toggleAllTodos: PropTypes.func.isRequired,\n  todosLength: PropTypes.number.isRequired,\n};\n\nexport default TodoHeader;\n","import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst TodoFilter = ({ filter, setFilter, isFilterSelect }) => (\n  <li>\n    <a\n      onClick={() => setFilter(filter)}\n      href=\"#/\"\n      className={cn({ selected: isFilterSelect })}\n    >\n      {filter}\n    </a>\n  </li>\n);\n\nTodoFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  isFilterSelect: PropTypes.bool.isRequired,\n};\n\nexport default TodoFilter;\n","import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport { FILTERS_TYPES } from './App';\nimport TodoFilter from './TodoFilter';\n\nconst TodoFooter = ({\n  todosLeft,\n  todos,\n  clearCompletedTodos,\n  setFilter,\n  currentFilter,\n}) => (\n  <footer\n    className={cn('footer')}\n    style={{ display: 'block' }}\n  >\n    <span className={cn('todo-count')}>\n      {todosLeft}\n      {' '}\n          items left\n    </span>\n\n    <ul className={cn('filters')}>\n      {Object.values(FILTERS_TYPES).map(value => (\n        <TodoFilter\n          key={value}\n          filter={value}\n          setFilter={setFilter}\n          isFilterSelect={value === currentFilter}\n        />\n      ))}\n    </ul>\n\n    <button\n      onClick={clearCompletedTodos}\n      type=\"button\"\n      className={cn('clear-completed')}\n      style={{ display: 'block' }}\n    >\n      {todos.some(todo => todo.completed) && 'Clear Completed'}\n    </button>\n  </footer>\n);\n\nTodoFooter.propTypes = {\n  todosLeft: PropTypes.number.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  clearCompletedTodos: PropTypes.func.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  currentFilter: PropTypes.string.isRequired,\n};\n\nexport default TodoFooter;\n","import React from 'react';\nimport cn from 'classnames';\nimport TodoList from './TodoList';\nimport TodoHeader from './TodoHeader';\nimport TodoFooter from './TodoFooter';\n\nexport const FILTERS_TYPES = {\n  all: 'All',\n  completed: 'Completed',\n  active: 'Active',\n};\n\nexport class App extends React.Component {\n  state = {\n    currentFilter: FILTERS_TYPES.all,\n    todos: [],\n  };\n\n  addTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [\n        ...prevState.todos,\n        todo,\n      ],\n      currentFilter: FILTERS_TYPES.all,\n    }));\n  };\n\n  checkTodo = (todoId) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id !== todoId) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }),\n    }));\n  };\n\n  editTodoTitle = (todoId, newTitle) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todoId !== todo.id || todo.title === newTitle) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          title: newTitle,\n        };\n      }),\n    }));\n  };\n\n  deleteTodo = (todoId) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== todoId),\n    }));\n  };\n\n  clearCompletedTodos = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n    }));\n  };\n\n  toggleAllTodos = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => ({\n        ...todo,\n        completed: !this.isAllChecked(),\n      })),\n    }));\n  };\n\n  isAllChecked = () => this.state.todos.every(todo => todo.completed);\n\n  setFilter = (filterValue) => {\n    this.setState({\n      currentFilter: filterValue,\n    });\n  };\n\n  filterArray = () => {\n    switch (this.state.currentFilter) {\n      case FILTERS_TYPES.completed:\n        return this.state.todos.filter(todo => todo.completed);\n      case FILTERS_TYPES.active:\n        return this.state.todos.filter(todo => !todo.completed);\n      case FILTERS_TYPES.all:\n      default: return this.state.todos.filter(todo => todo);\n    }\n  };\n\n  render() {\n    const { todos, currentFilter } = this.state;\n    const visibleTodos = this.filterArray();\n    const isAllChecked = this.isAllChecked();\n    const todosLength = todos.length;\n\n    return (\n      <section className={cn('todoapp')}>\n        <h1>todos</h1>\n        <TodoHeader\n          addTodo={this.addTodo}\n          toggleAllTodos={this.toggleAllTodos}\n          isAllChecked={isAllChecked}\n          todosLength={todosLength}\n        />\n        <section\n          className={cn('main')}\n          style={{ display: 'block' }}\n        >\n          <TodoList\n            todos={visibleTodos}\n            deleteTodo={this.deleteTodo}\n            checkTodo={this.checkTodo}\n            editTodoTitle={this.editTodoTitle}\n          />\n        </section>\n\n        {this.state.todos.length > 0 && (\n          <TodoFooter\n            currentFilter={currentFilter}\n            setFilter={this.setFilter}\n            todosLeft={todos.filter(todo => !todo.completed).length}\n            clearCompletedTodos={this.clearCompletedTodos}\n            todos={visibleTodos}\n          />\n        )}\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}