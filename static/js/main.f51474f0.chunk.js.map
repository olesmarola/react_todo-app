{"version":3,"sources":["Todo.js","TodoList.js","TodoFilter.js","TodosFiltersList.js","TodoFooter.js","App.js","index.js"],"names":["Todo","_ref","todo","deleteTodo","checkTodo","react_default","a","createElement","className","cn","completed","checked","onChange","e","id","type","htmlFor","title","onClick","TodoList","todos","map","src_Todo","key","TodoFilter","filter","setFilter","isFilterSelect","selectFilter","href","selected","FILTERS","all","active","TodosFiltersList","state","selectedFilter","_this","setState","_this2","this","Object","values","value","src_TodoFilter","props","React","Component","TodoFooter","todosLeft","clearCompletedTodos","currentFilter","style","display","src_TodosFiltersList","some","App","inputValue","addTodo","preventDefault","trim","length","prevState","concat","toConsumableArray","Date","todoId","persist","objectSpread2","target","toggleAllTodos","handleInputChange","filterValue","filterArray","_this$state","visibleTodos","onSubmit","placeholder","src_TodoList","src_TodoFooter","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f51474f0.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst Todo = ({ todo, deleteTodo, checkTodo }) => (\n  <li className={cn({ completed: todo.completed })}>\n    <div className={cn('view')}>\n      <input\n        checked={todo.completed}\n        onChange={e => checkTodo(e, todo.id)}\n        type=\"checkbox\"\n        className={cn('toggle')}\n        id={todo.id}\n      />\n      <label htmlFor=\"todo-1\">{todo.title}</label>\n      <button\n        onClick={() => deleteTodo(todo.id)}\n        type=\"button\"\n        className={cn('destroy')}\n      />\n    </div>\n  </li>\n);\n\nTodo.propTypes = {\n  todo: PropTypes.arrayOf(PropTypes.object).isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  checkTodo: PropTypes.func.isRequired,\n};\n\nexport default Todo;\n","import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\n\nconst TodoList = ({ todos, deleteTodo, checkTodo }) => (\n  <ul className={cn('todo-list')}>\n    {todos.map(todo => (\n      <Todo\n        key={todo.id}\n        todo={todo}\n        deleteTodo={deleteTodo}\n        checkTodo={checkTodo}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  checkTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst TodoFilter = ({ filter, setFilter, isFilterSelect, selectFilter }) => (\n  <li>\n    <a\n      onClick={() => {\n        setFilter(filter);\n        selectFilter(filter);\n      }}\n      href=\"#/\"\n      className={cn({ selected: isFilterSelect })}\n    >\n      {filter}\n    </a>\n  </li>\n);\n\nTodoFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  isFilterSelect: PropTypes.bool.isRequired,\n  selectFilter: PropTypes.func.isRequired,\n};\n\nexport default TodoFilter;\n","import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport TodoFilter from './TodoFilter';\n\nconst FILTERS = {\n  all: 'All',\n  completed: 'Completed',\n  active: 'Active',\n};\n\nclass TodosFiltersList extends React.Component {\n  state = {\n    selectedFilter: 'All',\n  };\n\n  selectFilter = (filter) => {\n    this.setState({\n      selectedFilter: filter,\n    });\n  };\n\n  render() {\n    return (\n      <ul className={cn('filters')}>\n        {Object.values(FILTERS).map(value => (\n          <TodoFilter\n            key={value}\n            filter={value}\n            setFilter={this.props.setFilter}\n            selectFilter={this.selectFilter}\n            isFilterSelect={value === this.state.selectedFilter}\n          />\n        ))}\n      </ul>\n    );\n  }\n}\n\nTodosFiltersList.propTypes = {\n  setFilter: PropTypes.func.isRequired,\n};\n\nexport default TodosFiltersList;\n","import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport TodosFiltersList from './TodosFiltersList';\n\nconst TodoFooter = ({\n  todosLeft,\n  todos,\n  clearCompletedTodos,\n  setFilter,\n  currentFilter,\n}) => (\n  <footer\n    className={cn('footer')}\n    style={{ display: 'block' }}\n  >\n    <span className={cn('todo-count')}>\n      {todosLeft}\n      {' '}\n          items left\n    </span>\n\n    <TodosFiltersList\n      currentFilter={currentFilter}\n      todos={todos}\n      setFilter={setFilter}\n    />\n\n    <button\n      onClick={clearCompletedTodos}\n      type=\"button\"\n      className={cn('clear-completed')}\n      style={{ display: 'block' }}\n    >\n      {todos.some(todo => todo.completed) && 'Clear Completed'}\n    </button>\n  </footer>\n);\n\nTodoFooter.propTypes = {\n  todosLeft: PropTypes.number.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  clearCompletedTodos: PropTypes.func.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  currentFilter: PropTypes.func.isRequired,\n};\n\nexport default TodoFooter;\n","import React from 'react';\nimport cn from 'classnames';\nimport TodoList from './TodoList';\nimport TodoFooter from './TodoFooter';\n\nclass App extends React.Component {\n  state = {\n    inputValue: '',\n    currentFilter: 'All',\n    todos: [],\n  };\n\n  addTodo = (e) => {\n    e.preventDefault();\n\n    this.state.inputValue.trim().length > 0 && this.setState(prevState => ({\n      todos: [\n        ...prevState.todos,\n        {\n          id: +new Date(),\n          title: prevState.inputValue,\n          completed: false,\n        },\n      ],\n      inputValue: '',\n    }));\n  };\n\n  checkTodo = (e, todoId) => {\n    e.persist();\n\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id !== todoId) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          completed: e.target.checked,\n        };\n      }),\n    }));\n  };\n\n  deleteTodo = (todoId) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== todoId),\n    }));\n  };\n\n  clearCompletedTodos =() => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n    }));\n  };\n\n  toggleAllTodos = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => ({\n        ...todo,\n        completed: !todo.completed,\n      })),\n    }));\n  };\n\n  handleInputChange = (e) => {\n    this.setState({\n      inputValue: e.target.value,\n    });\n  };\n\n  setFilter = (filterValue) => {\n    this.setState({\n      currentFilter: filterValue,\n    });\n  };\n\n  filterArray = () => {\n    switch (this.state.currentFilter) {\n      case 'Completed': return this.state.todos.filter(todo => todo.completed);\n      case 'Active': return this.state.todos.filter(todo => !todo.completed);\n      case 'All':\n      default: return this.state.todos.filter(todo => todo);\n    }\n  };\n\n  render() {\n    const { todos, inputValue, currentFilter } = this.state;\n    const visibleTodos = this.filterArray();\n\n    return (\n      <section className={cn('todoapp')}>\n        <h1>todos</h1>\n        <form\n          onSubmit={this.addTodo}\n          className={cn('header')}\n        >\n          <input\n            onChange={this.handleInputChange}\n            value={inputValue}\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n          />\n        </form>\n\n        <section\n          className={cn('main')}\n          style={{ display: 'block' }}\n        >\n          <input\n            onClick={this.toggleAllTodos}\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className={cn('toggle-all')}\n          />\n          {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <TodoList\n            todos={visibleTodos}\n            deleteTodo={this.deleteTodo}\n            checkTodo={this.checkTodo}\n          />\n        </section>\n\n        {this.state.todos.length > 0 && (\n          <TodoFooter\n            currentFilter={currentFilter}\n            setFilter={this.setFilter}\n            todosLeft={todos.filter(todo => !todo.completed).length}\n            clearCompletedTodos={this.clearCompletedTodos}\n            todos={visibleTodos}\n          />\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}