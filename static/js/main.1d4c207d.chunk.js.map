{"version":3,"sources":["Todo.js","TodoList.js","TodoHeader.js","TodoFilter.js","TodoFooter.js","App.js","index.js"],"names":["Todo","state","editValue","_this","props","todo","title","handleInputChange","e","setState","target","value","handleKeyPress","selectToEdit","key","editTodo","_this$props","deleteTodo","editTodoTitle","trim","length","id","_this$props2","this","checkTodo","canEdit","react_default","a","createElement","className","cn","completed","editing","checked","onChange","type","onDoubleClick","onClick","autoFocus","onKeyUp","onBlur","React","Component","TodoList","selectToEditId","_this2","todos","map","src_Todo","TodoHeader","inputValue","validateInput","preventDefault","Date","addTodo","todosLength","isAllChecked","toggleAllTodos","onSubmit","placeholder","Fragment","htmlFor","TodoFilter","_ref","filter","setFilter","isFilterSelect","href","selected","TodoFooter","todosLeft","clearCompletedTodos","currentFilter","style","display","Object","values","FILTERS_TYPES","src_TodoFilter","some","all","active","getAllTodosFromStorage","keys","localStorage","forEach","push","JSON","parse","sort","b","App","_React$Component","_getPrototypeOf2","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","prevState","toConsumableArray","todoId","objectSpread2","newTitle","every","filterValue","filterArray","inherits","createClass","clear","setItem","toString","stringify","_this$state","visibleTodos","src_TodoHeader","src_TodoList","src_TodoFooter","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.1d4c207d.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\n\nclass Todo extends React.Component {\n  state = {\n    editValue: this.props.todo.title,\n  };\n\n  handleInputChange = (e) => {\n    this.setState({\n      editValue: e.target.value,\n    });\n  };\n\n  handleKeyPress = (e) => {\n    const { selectToEdit } = this.props;\n\n    if (e.key === 'Enter') {\n      this.editTodo();\n    }\n\n    if (e.key === 'Escape') {\n      selectToEdit(null);\n      this.setState({\n        editValue: this.props.todo.title,\n      });\n    }\n  };\n\n  editTodo = () => {\n    const { todo, deleteTodo, editTodoTitle, selectToEdit } = this.props;\n\n    if (this.state.editValue.trim().length === 0) {\n      deleteTodo(todo.id);\n    }\n\n    editTodoTitle(todo.id, this.state.editValue);\n    selectToEdit(null);\n  };\n\n  render() {\n    const { todo, deleteTodo, checkTodo, selectToEdit, canEdit } = this.props;\n\n    return (\n      <li className={cn(\n        { completed: todo.completed },\n        { editing: canEdit }\n      )}\n      >\n        <div className={cn('view')}>\n          <input\n            checked={todo.completed}\n            onChange={() => checkTodo(todo.id)}\n            type=\"checkbox\"\n            className={cn('toggle')}\n            id={todo.id}\n          />\n          <label\n            onDoubleClick={() => selectToEdit(todo.id)}\n          >\n            {todo.title}\n          </label>\n          <button\n            onClick={() => deleteTodo(todo.id)}\n            type=\"button\"\n            className={cn('destroy')}\n          />\n        </div>\n        {canEdit && (\n          <input\n            autoFocus\n            onChange={this.handleInputChange}\n            onKeyUp={this.handleKeyPress}\n            onBlur={this.editTodo}\n            value={this.state.editValue}\n            type=\"text\"\n            className=\"edit\"\n          />\n        )}\n      </li>\n    );\n  }\n}\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  }).isRequired,\n  canEdit: PropTypes.bool.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  checkTodo: PropTypes.func.isRequired,\n  editTodoTitle: PropTypes.func.isRequired,\n  selectToEdit: PropTypes.func.isRequired,\n};\n\nexport default Todo;\n","import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\n\nclass TodoList extends React.Component {\n  state = {\n    selectToEditId: null,\n  };\n\n  selectToEdit = (id) => {\n    this.setState({\n      selectToEditId: id,\n    });\n  };\n\n  render() {\n    const { todos, deleteTodo, checkTodo, editTodoTitle } = this.props;\n\n    return (\n      <ul className={cn('todo-list')}>\n        {todos.map(todo => (\n          <Todo\n            key={todo.id}\n            todo={todo}\n            deleteTodo={deleteTodo}\n            checkTodo={checkTodo}\n            editTodoTitle={editTodoTitle}\n            selectToEdit={this.selectToEdit}\n            canEdit={this.state.selectToEditId === todo.id}\n          />\n        ))}\n      </ul>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  checkTodo: PropTypes.func.isRequired,\n  editTodoTitle: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\n\nclass TodoHeader extends React.Component {\n  state = {\n    inputValue: '',\n  };\n\n  handleInputChange = (e) => {\n    this.setState({\n      inputValue: e.target.value,\n    });\n  };\n\n  validateInput = (e) => {\n    e.preventDefault();\n\n    if (this.state.inputValue.trim().length > 0) {\n      const todo = {\n        id: +new Date(),\n        title: this.state.inputValue,\n        completed: false,\n      };\n\n      this.props.addTodo(todo);\n\n      this.setState({\n        inputValue: '',\n      });\n    }\n  };\n\n  render() {\n    const { todosLength, isAllChecked, toggleAllTodos } = this.props;\n\n    return (\n      <form\n        onSubmit={this.validateInput}\n        className={cn('header')}\n      >\n        <input\n          autoFocus\n          onBlur={this.validateInput}\n          onChange={this.handleInputChange}\n          value={this.state.inputValue}\n          type=\"text\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n        />\n\n        {todosLength > 0 && (\n          <>\n            <input\n              checked={isAllChecked}\n              onChange={toggleAllTodos}\n              type=\"checkbox\"\n              id=\"toggle-all\"\n              className={cn('toggle-all')}\n            />\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          </>\n        )}\n      </form>\n    );\n  }\n}\n\nTodoHeader.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n  isAllChecked: PropTypes.bool.isRequired,\n  toggleAllTodos: PropTypes.func.isRequired,\n  todosLength: PropTypes.number.isRequired,\n};\n\nexport default TodoHeader;\n","import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst TodoFilter = ({ filter, setFilter, isFilterSelect }) => (\n  <li>\n    <a\n      onClick={() => setFilter(filter)}\n      href=\"#/\"\n      className={cn({ selected: isFilterSelect })}\n    >\n      {filter}\n    </a>\n  </li>\n);\n\nTodoFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  isFilterSelect: PropTypes.bool.isRequired,\n};\n\nexport default TodoFilter;\n","import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport { FILTERS_TYPES } from './App';\nimport TodoFilter from './TodoFilter';\n\nconst TodoFooter = ({\n  todosLeft,\n  todos,\n  clearCompletedTodos,\n  setFilter,\n  currentFilter,\n}) => (\n  <footer\n    className={cn('footer')}\n    style={{ display: 'block' }}\n  >\n    <span className={cn('todo-count')}>\n      {todosLeft}\n      {' '}\n          items left\n    </span>\n\n    <ul className={cn('filters')}>\n      {Object.values(FILTERS_TYPES).map(value => (\n        <TodoFilter\n          key={value}\n          filter={value}\n          setFilter={setFilter}\n          isFilterSelect={value === currentFilter}\n        />\n      ))}\n    </ul>\n\n    <button\n      onClick={clearCompletedTodos}\n      type=\"button\"\n      className={cn('clear-completed')}\n      style={{ display: 'block' }}\n    >\n      {todos.some(todo => todo.completed) && 'Clear Completed'}\n    </button>\n  </footer>\n);\n\nTodoFooter.propTypes = {\n  todosLeft: PropTypes.number.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  clearCompletedTodos: PropTypes.func.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  currentFilter: PropTypes.string.isRequired,\n};\n\nexport default TodoFooter;\n","import React from 'react';\nimport cn from 'classnames';\nimport TodoList from './TodoList';\nimport TodoHeader from './TodoHeader';\nimport TodoFooter from './TodoFooter';\n\nexport const FILTERS_TYPES = {\n  all: 'All',\n  completed: 'Completed',\n  active: 'Active',\n};\n\nconst getAllTodosFromStorage = () => {\n  const todos = [];\n\n  Object.keys(localStorage).forEach(\n    key => todos.push(JSON.parse(localStorage[key]))\n  );\n\n  todos.sort((a, b) => a.id - b.id);\n\n  return todos;\n};\n\nexport class App extends React.Component {\n  state = {\n    currentFilter: FILTERS_TYPES.all,\n    todos: getAllTodosFromStorage(),\n  };\n\n  componentDidUpdate() {\n    localStorage.clear();\n\n    Object.values(this.state.todos).forEach(\n      todo => localStorage.setItem(todo.id.toString(), JSON.stringify(todo))\n    );\n  }\n\n  addTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [\n        ...prevState.todos,\n        todo,\n      ],\n      currentFilter: FILTERS_TYPES.all,\n    }));\n  };\n\n  checkTodo = (todoId) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id !== todoId) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }),\n    }));\n  };\n\n  editTodoTitle = (todoId, newTitle) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todoId !== todo.id || todo.title === newTitle) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          title: newTitle,\n        };\n      }),\n    }));\n  };\n\n  deleteTodo = (todoId) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== todoId),\n    }));\n  };\n\n  clearCompletedTodos = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n    }));\n  };\n\n  toggleAllTodos = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => ({\n        ...todo,\n        completed: !this.isAllChecked(),\n      })),\n    }));\n  };\n\n  isAllChecked = () => this.state.todos.every(todo => todo.completed);\n\n  setFilter = (filterValue) => {\n    this.setState({\n      currentFilter: filterValue,\n    });\n  };\n\n  filterArray = () => {\n    switch (this.state.currentFilter) {\n      case FILTERS_TYPES.completed:\n        return this.state.todos.filter(todo => todo.completed);\n      case FILTERS_TYPES.active:\n        return this.state.todos.filter(todo => !todo.completed);\n      case FILTERS_TYPES.all:\n      default: return this.state.todos.filter(todo => todo);\n    }\n  };\n\n  render() {\n    const { todos, currentFilter } = this.state;\n    const visibleTodos = this.filterArray();\n    const isAllChecked = this.isAllChecked();\n    const todosLength = todos.length;\n\n    return (\n      <section className={cn('todoapp')}>\n        <h1>todos</h1>\n        <TodoHeader\n          addTodo={this.addTodo}\n          toggleAllTodos={this.toggleAllTodos}\n          isAllChecked={isAllChecked}\n          todosLength={todosLength}\n        />\n        <section\n          className={cn('main')}\n          style={{ display: 'block' }}\n        >\n          <TodoList\n            todos={visibleTodos}\n            deleteTodo={this.deleteTodo}\n            checkTodo={this.checkTodo}\n            editTodoTitle={this.editTodoTitle}\n          />\n        </section>\n\n        {this.state.todos.length > 0 && (\n          <TodoFooter\n            currentFilter={currentFilter}\n            setFilter={this.setFilter}\n            todosLeft={todos.filter(todo => !todo.completed).length}\n            clearCompletedTodos={this.clearCompletedTodos}\n            todos={visibleTodos}\n          />\n        )}\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}